{"version":3,"sources":["scripts/main.js"],"names":["printNotification","type","text","items","message","document","createElement","classList","add","messageText","textContent","append","list","listItem","id","appendChild","i","length","createTextNode","toUpperCase","body","listUrl","detailsUrl","getPhones","url","Promise","resolve","reject","fetch","then","response","json","result","setTimeout","Error","getAllSuccessfulDetails","idsData","map","all","getFirstReceivedDetails","race","phonesIdsData","setParameters","item","push"],"mappings":"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","file":"main.f0e38ef9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction printNotification(type, text, items) {\n  const message = document.createElement('div');\n\n  message.classList.add(type);\n\n  const messageText = document.createElement('h3');\n\n  messageText.textContent = text;\n\n  message.append(messageText);\n\n  const list = document.createElement('ul');\n\n  if (typeof items === 'object') {\n    const listItem = document.createElement('li');\n\n    listItem.textContent = items.id;\n    list.appendChild(listItem);\n  }\n\n  for (let i = 0; i < items.length; i++) {\n    const listItem = document.createElement('li');\n\n    listItem.appendChild(document.createTextNode(items[i].toUpperCase()));\n\n    list.appendChild(listItem);\n  }\n\n  message.append(list);\n\n  document.body.append(message);\n}\n\nconst listUrl\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nconst detailsUrl\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\n\nfunction getPhones(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => response.json())\n      .then(result => resolve(result));\n\n    setTimeout(() => reject(new Error('end')), 5000);\n  });\n}\n\nfunction getAllSuccessfulDetails(idsData) {\n  const items = idsData.map(id => fetch(`${detailsUrl}${id}.json`));\n\n  printNotification('all-successful', 'All Successful', idsData);\n\n  return Promise.all(items);\n}\n\nfunction getFirstReceivedDetails(idsData) {\n  const items = idsData.map(id => fetch(`${detailsUrl}${id}.json`));\n\n  return Promise.race(items)\n    .then(response => response.json())\n    .then(result => (\n      printNotification('first-received', 'First Received', result)\n    ));\n}\n\nconst phonesIdsData = [];\n\ngetPhones(listUrl)\n  .then(result => {\n    for (const item of result) {\n      phonesIdsData.push(item.id);\n    }\n\n    return phonesIdsData;\n  })\n  .then(items => setParameters(items));\n\nfunction setParameters(id) {\n  getFirstReceivedDetails(id);\n  getAllSuccessfulDetails(id);\n}\n"]}